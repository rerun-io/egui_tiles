{
    "editor.formatOnSave": true,
    "editor.semanticTokenColorCustomizations": {
        "rules": {
            "*.unsafe:rust": "#eb5046"
        }
    },
    "files.autoGuessEncoding": true,
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    // don't share a cargo lock with rust-analyzer.
    // see https://github.com/rerun-io/rerun/pull/519 for rationale
    "rust-analyzer.check.overrideCommand": [
        "cargo",
        "clippy",
        "--target-dir=target_ra",
        "--workspace",
        "--message-format=json",
        "--all-targets",
        "--all-features"
    ],
    "rust-analyzer.cargo.buildScripts.overrideCommand": [
        "cargo",
        "check",
        "--quiet",
        "--target-dir=target_ra",
        "--workspace",
        "--message-format=json",
        "--all-targets",
        "--all-features",
    ],
    // Our build scripts are generating code.
    // Having Rust Analyzer do this while doing other builds can lead to catastrophic failures.
    // INCLUDING attempts to publish a new release!
    "rust-analyzer.cargo.buildScripts.enable": false,
    "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools", // Use cmake-tools to grab configs.
    "C_Cpp.autoAddFileAssociations": false,
    "cmake.buildDirectory": "${workspaceRoot}/build/debug",
    "cmake.generator": "Ninja", // Use Ninja, just like we do in our just/pixi command.
    "rust-analyzer.showUnlinkedFileNotification": false,
    "ruff.format.args": [
        "--config=pyproject.toml"
    ],
    "ruff.lint.args": [
        "--config=pyproject.toml"
    ],
    "prettier.requireConfig": true,
    "prettier.configPath": ".prettierrc.toml",
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff"
    },
}
